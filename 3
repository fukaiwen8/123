import org.apache.spark.sql.{DataFrame, SparkSession}
import org.apache.spark.sql.functions._

object DFFinal {

    def main(args: Array[String]) = {  // autograder will call this function
        //remember, DataFrames only
        val spark = getSparkSession()
        import spark.implicits._
        val mydf = getDF(spark)
        val answer = doFinal(mydf)
        saveit(answer, "df_final")

    }

    def doFinal(input: DataFrame): DataFrame = {
    val leftCounts = df.groupBy("Left").count()
      .withColumnRenamed("Left", "Node")
      .withColumnRenamed("count", "LeftCount")

    val rightCounts = df.groupBy("Right").count()
      .withColumnRenamed("Right", "Node")
      .withColumnRenamed("count", "RightCount")

    val combinedCounts = leftCounts
      .join(rightCounts, Seq("Node"), "outer")
      .na.fill(0, Seq("LeftCount", "RightCount"))
      .withColumn("TotalCount", $"LeftCount" + $"RightCount")

    val filtered = combinedCounts.filter($"TotalCount" >= 3)

    filtered.select($"Node", concat(lit("["), $"LeftCount", lit(", "), $"RightCount", lit("]")).alias("Counts"))
    }

    def getSparkSession(): SparkSession = {
        val spark = SparkSession.builder().getOrCreate()
        spark
    }

    def getDF(spark: SparkSession): DataFrame = {
        import spark.implicits._
    spark.read
      .text("hdfs:///datasets/facebook")
      .filter($"value".isNotNull)
      .withColumn("Left", split($"value", " ").getItem(0))
      .withColumn("Right", split($"value", " ").getItem(1))
      .select("Left", "Right")
    }

    def getTestDF(spark: SparkSession): DataFrame = {
        import spark.implicits._
        Seq(
       ("236 186"),
       ("122 285"),
       ("236 122"),
       ("186 285"),
       ("236 186")
        ).toDF("value")
    }

    def expectedOutput(spark: SparkSession): DataFrame = {
        import spark.implicits._
        Seq(
        ("236", "[3, 2]"),
        ("186", "[1, 2]"),
        ("122", "[1, 1]")
       ).toDF("Node", "Counts")
    }

    def saveit(counts: DataFrame, name: String) = {
      counts.write.format("csv").mode("overwrite").save(name)

    }

}


xiu fu
